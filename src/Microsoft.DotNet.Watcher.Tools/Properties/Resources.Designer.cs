// <auto-generated />
namespace Microsoft.DotNet.Watcher.Tools
{
    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    internal static class Resources
    {
        private static readonly ResourceManager _resourceManager
            = new ResourceManager("Microsoft.DotNet.Watcher.Tools.Resources", typeof(Resources).GetTypeInfo().Assembly);

        /// <summary>
        /// The project file '{path}' does not exist.
        /// </summary>
        internal static string Error_ProjectPath_NotFound
        {
            get { return GetString("Error_ProjectPath_NotFound"); }
        }

        /// <summary>
        /// The project file '{path}' does not exist.
        /// </summary>
        internal static string FormatError_ProjectPath_NotFound(object path)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Error_ProjectPath_NotFound", "path"), path);
        }

        /// <summary>
        /// Multiple MSBuild project files found in '{projectPath}'. Specify which to use with the --project option.
        /// </summary>
        internal static string Error_MultipleProjectsFound
        {
            get { return GetString("Error_MultipleProjectsFound"); }
        }

        /// <summary>
        /// Multiple MSBuild project files found in '{projectPath}'. Specify which to use with the --project option.
        /// </summary>
        internal static string FormatError_MultipleProjectsFound(object projectPath)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Error_MultipleProjectsFound", "projectPath"), projectPath);
        }

        /// <summary>
        /// Could not find a MSBuild project file in '{projectPath}'. Specify which project to use with the --project option.
        /// </summary>
        internal static string Error_NoProjectsFound
        {
            get { return GetString("Error_NoProjectsFound"); }
        }

        /// <summary>
        /// Could not find a MSBuild project file in '{projectPath}'. Specify which project to use with the --project option.
        /// </summary>
        internal static string FormatError_NoProjectsFound(object projectPath)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Error_NoProjectsFound", "projectPath"), projectPath);
        }

        /// <summary>
        /// Cannot specify both '--quiet' and '--verbose' options.
        /// </summary>
        internal static string Error_QuietAndVerboseSpecified
        {
            get { return GetString("Error_QuietAndVerboseSpecified"); }
        }

        /// <summary>
        /// Cannot specify both '--quiet' and '--verbose' options.
        /// </summary>
        internal static string FormatError_QuietAndVerboseSpecified()
        {
            return GetString("Error_QuietAndVerboseSpecified");
        }

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name);

            System.Diagnostics.Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
